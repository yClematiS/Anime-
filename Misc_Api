--Function to hide message
local function message()
    wait(1)
    local MessagGui = game:GetService("Players").LocalPlayer.PlayerGui.MessageGui.messages
    MessagGui.Visible = false
end

-- Function to Show Gem
local function showgem()
    wait(1)
    local gemUI = game:GetService("Players").LocalPlayer.PlayerGui.spawn_units.Lives.Frame.Resource.Gem
    gemUI.Visible = true
    print("Gem UI set to visible")
end

-- Wait in lobby too long
local function lobbystuck()
    local ts = game:GetService("TeleportService")

local p = game:GetService("Players").LocalPlayer

ts:Teleport(game.PlaceId, p)
end

-- Call Function
showgem()
message()

local HttpService = game:GetService("HttpService")
local url = _G.webhook_url
local plyname = "PlayerName"

task.spawn(function()
    for _, v in pairs(workspace:GetChildren()) do
        if v.Name == "weather" then
            wait(300)
            print("Player stayed in lobby too long, rejoining...")

            local function SendMessage(message)
                local headers = { ["Content-Type"] = "application/json" }
                local data = { ["content"] = message }
                local body = HttpService:JSONEncode(data)

                HttpService:PostAsync(url, body, Enum.HttpContentType.ApplicationJson)
                print("Message sent:", message)
            end

            local function SendMessageEMBED(embed)
                local headers = { ["Content-Type"] = "application/json" }
                local data = {
                    ["embeds"] = {
                        {
                            ["title"] = embed.title,
                            ["description"] = embed.description,
                            ["color"] = embed.color,
                            ["fields"] = embed.fields,
                            ["footer"] = { ["text"] = embed.footer.text }
                        }
                    }
                }
                local body = HttpService:JSONEncode(data)

                HttpService:PostAsync(url, body, Enum.HttpContentType.ApplicationJson)
                print("Embed sent:", embed.title)
            end

            local function getFormattedDateTime()
                return os.date("%Y-%m-%d %H:%M:%S")
            end

            SendMessage("Player is rejoining due to being in the lobby too long.")

            local embed = {
                ["title"] = plyname,
                ["description"] = "Player has been detected in the lobby for too long.",
                ["color"] = 0x8A00FF,
                ["fields"] = {
                    { ["name"] = "Player Rejoin", ["value"] = "Player stayed in lobby too long, rejoining now." },
                },
                ["footer"] = { ["text"] = getFormattedDateTime() }
            }
            SendMessageEMBED(embed)

            if typeof(lobbystuck) == "function" then
                lobbystuck()
            else
                print("Error: lobbystuck function not found!")
            end
        end
    end
end)
