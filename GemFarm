repeat wait() until game:IsLoaded()
_G.GroundOrHill = "Automatic"
if _G.GroundOrHill == "Automatic" then
    _G.Ground1 = CFrame.new(-2955.7119140625, 91.80620574951172, -713.1185302734375) * CFrame.Angles(0, -0, -0)
    _G.Ground2 = CFrame.new(-2938.81396484375, 91.80620574951172, -698.8776245117188) * CFrame.Angles(0, -0, -0)
    _G.Ground3 = CFrame.new(-2943.4169921875, 91.80620574951172, -693.7794799804688) * CFrame.Angles(0, -0, -0)
    _G.Ground4 = CFrame.new(-2942.13134765625, 91.80620574951172, -699.491455078125) * CFrame.Angles(0, -0, -0)
    _G.Ground5 = CFrame.new(-2942.319580078125, 91.80620574951172, -700.6551513671875) * CFrame.Angles(0, -0, -0)
    _G.Hill1 = CFrame.new(-2948.45849609375, 94.41859436035156, -718.0990600585938) * CFrame.Angles(0, -0, -0)
    _G.Hill2 = CFrame.new(-2951.012451171875, 94.41859436035156, -715.6174926757812) * CFrame.Angles(0, -0, -0)
    _G.Hill3 = CFrame.new(-2946.866943359375, 94.41859436035156, -715.58837890625) * CFrame.Angles(0, -0, -0)
    _G.Hill4 = CFrame.new(-2951.372314453125, 94.41859436035156, -720.463134765625) * CFrame.Angles(0, -0, -0)
    _G.Hill5 = CFrame.new(-2953.207275390625, 94.41859436035156, -722.3843994140625) * CFrame.Angles(0, -0, -0)
end
wait(1)

print("Auto Place for kaitun Executed")
local players = game:GetService("Players")
local player = players.LocalPlayer
local sentUnits = {}

while _G.isgemfarming do
    wait(1)
    local gmaae = workspace
    for  i, v in pairs(gmaae:GetChildren()) do
        if v.Name == "_waves_started" then
            local wavenum = workspace._wave_num.Value
            if _G.limitunit >= 1 and wavenum == 2 and not sentUnits["unit1"] then
            if _G.GroundOrHill == "Automatic" then
                local args = {
                    [1] = _G.unit_id,
                    [2] = _G.Ground1
                }
                game:GetService("ReplicatedStorage").endpoints.client_to_server.spawn_unit:InvokeServer(unpack(args))
                wait(0.5)
                local args = {
                    [1] = _G.unit_id,
                    [2] = _G.Hill1
                }
                game:GetService("ReplicatedStorage").endpoints.client_to_server.spawn_unit:InvokeServer(unpack(args))
            end
            sentUnits["unit1"] = true
        end
        -------------------------------------------------------------------------------------------------------
            if _G.limitunit >= 2 and wavenum == 3 and not sentUnits["unit2"] then

                if _G.GroundOrHill == "Automatic" then
                    local args = {
                        [1] = _G.unit_id,
                        [2] = _G.Ground2
                    }
                    game:GetService("ReplicatedStorage").endpoints.client_to_server.spawn_unit:InvokeServer(unpack(args))
                    wait(0.5)
                    local args = {
                        [1] = _G.unit_id,
                        [2] = _G.Hill2
                    }
                    game:GetService("ReplicatedStorage").endpoints.client_to_server.spawn_unit:InvokeServer(unpack(args))
                end
                sentUnits["unit2"] = true
            end
        ------------------------------------------------------------------------------------------------
            if _G.limitunit >= 3 and wavenum == 4 and not sentUnits["unit3"] then
                if _G.GroundOrHill == "Automatic" then
                    local args = {
                        [1] = _G.unit_id,
                        [2] = _G.Ground3
                    }
                    game:GetService("ReplicatedStorage").endpoints.client_to_server.spawn_unit:InvokeServer(unpack(args))
                    wait(0.5)
                    local args = {
                        [1] = _G.unit_id,
                        [2] = _G.Hill3
                    }
                    game:GetService("ReplicatedStorage").endpoints.client_to_server.spawn_unit:InvokeServer(unpack(args))
                end
                sentUnits["unit3"] = true
            end
        -----------------------------------------------------------------------------------------------------------
            if _G.limitunit >= 4 and wavenum == 5 and not sentUnits["unit4"] then
                if _G.GroundOrHill == "Automatic" then
                    local args = {
                        [1] = _G.unit_id,
                        [2] = _G.Ground4
                    }
                    game:GetService("ReplicatedStorage").endpoints.client_to_server.spawn_unit:InvokeServer(unpack(args))
                    wait(0.5)
                    local args = {
                        [1] = _G.unit_id,
                        [2] = _G.Hill4
                    }
                    game:GetService("ReplicatedStorage").endpoints.client_to_server.spawn_unit:InvokeServer(unpack(args))
                end
                sentUnits["unit4"] = true
            end
        -------------------------------------------------------------------------------------
            if _G.limitunit >= 5 and wavenum == 6 and not sentUnits["unit5"] then    
                if _G.GroundOrHill == "Automatic" then
                    local args = {
                        [1] = _G.unit_id,
                        [2] = _G.Ground5
                    }
                    game:GetService("ReplicatedStorage").endpoints.client_to_server.spawn_unit:InvokeServer(unpack(args))
                    wait(0.5)
                    local args = {
                        [1] = _G.unit_id,
                        [2] = _G.Hill5
                    }
                    game:GetService("ReplicatedStorage").endpoints.client_to_server.spawn_unit:InvokeServer(unpack(args))
                end
                sentUnits["unit5"] = true
            end
        end
    end
end
